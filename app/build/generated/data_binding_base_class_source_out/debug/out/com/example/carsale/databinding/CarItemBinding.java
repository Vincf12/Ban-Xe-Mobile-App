// Generated by view binder compiler. Do not edit!
package com.example.carsale.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carsale.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CarItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout adminButtons;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final TextView txtMakeModel;

  @NonNull
  public final TextView txtPrice;

  private CarItemBinding(@NonNull CardView rootView, @NonNull LinearLayout adminButtons,
      @NonNull Button btnDelete, @NonNull Button btnEdit, @NonNull TextView txtMakeModel,
      @NonNull TextView txtPrice) {
    this.rootView = rootView;
    this.adminButtons = adminButtons;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.txtMakeModel = txtMakeModel;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CarItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CarItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.car_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CarItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminButtons;
      LinearLayout adminButtons = ViewBindings.findChildViewById(rootView, id);
      if (adminButtons == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.txtMakeModel;
      TextView txtMakeModel = ViewBindings.findChildViewById(rootView, id);
      if (txtMakeModel == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      return new CarItemBinding((CardView) rootView, adminButtons, btnDelete, btnEdit, txtMakeModel,
          txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
